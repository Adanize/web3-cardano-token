{"version":3,"sources":["webpack://web3-cardano-token/./node_modules/node-libs-browser/mock/process.js","webpack://web3-cardano-token/./node_modules/core-js/modules/es.typed-array.float64-array.js","webpack://web3-cardano-token/./temporary_modules/@emurgo/cardano-message-signing-nodejs sync","webpack://web3-cardano-token/./node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js","webpack://web3-cardano-token/./temporary_modules/@emurgo/cardano-message-signing-nodejs/emurgo_message_signing.js","webpack://web3-cardano-token/./node_modules/@babel/runtime/helpers/createClass.js","webpack://web3-cardano-token/./node_modules/@babel/runtime/helpers/typeof.js","webpack://web3-cardano-token/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://web3-cardano-token/./node_modules/core-js/modules/es.string.raw.js","webpack://web3-cardano-token/./node_modules/path-browserify/index.js"],"names":["_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","module","exports","__esModule","imports","wasm","require","String","TextDecoder","TextEncoder","heap","Array","fill","undefined","push","getObject","idx","heap_next","length","dropObject","takeObject","ret","cachedTextDecoder","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","memory","Uint8Array","getStringFromWasm0","ptr","len","subarray","addHeapObject","obj","debugString","val","type","description","name","isArray","debug","i","builtInMatches","exec","toString","call","className","JSON","stringify","_","Error","message","stack","WASM_VECTOR_LEN","cachedTextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","passStringToWasm0","malloc","realloc","mem","offset","code","charCodeAt","cachegetInt32Memory0","getInt32Memory0","Int32Array","getArrayU8FromWasm0","passArray8ToWasm0","_assertClass","instance","klass","isLikeNone","x","cachegetFloat64Memory0","getFloat64Memory0","Float64Array","LabelKind","Int","Text","SignedMessageKind","COSESIGN","COSESIGN1","SigContext","Signature","Signature1","CounterSignature","CBORSpecialType","Bool","Float","Unassigned","Break","Undefined","Null","CBORValueKind","Bytes","TaggedCBOR","Special","AlgorithmId","EdDSA","ChaCha20Poly1305","KeyType","OKP","EC2","Symmetric","ECKey","CRV","X","Y","D","CurveType","P256","P384","P521","X25519","X448","Ed25519","Ed448","KeyOperation","Sign","Verify","Encrypt","Decrypt","WrapKey","UnwrapKey","DeriveKey","DeriveBits","BigNum","__destroy_into_raw","__wbg_bignum_free","retptr","__wbindgen_add_to_stack_pointer","bignum_to_bytes","r0","r1","v0","__wbindgen_free","bignum_to_str","other","bignum_checked_mul","__wrap","bignum_checked_add","bignum_checked_sub","create","prototype","bytes","ptr0","__wbindgen_malloc","len0","bignum_from_bytes","string","__wbindgen_realloc","bignum_from_str","CBORArray","__wbg_cborarray_free","cborarray_to_bytes","cborarray_len","index","cborarray_get","CBORValue","elem","cborarray_add","use_definite","cborarray_set_definite_encoding","cborarray_is_definite","cborarray_from_bytes","cborarray_new","CBORObject","__wbg_cborobject_free","cborobject_to_bytes","cborobject_len","key","cborobject_insert","cborobject_get","cborobject_keys","cborobject_set_definite_encoding","cborobject_is_definite","cborobject_from_bytes","cborobject_new","CBORSpecial","__wbg_cborspecial_free","cborspecial_to_bytes","cborspecial_kind","cborspecial_as_bool","cborspecial_as_float","cborspecial_as_unassigned","cborspecial_from_bytes","b","cborspecial_new_bool","u","cborspecial_new_unassigned","cborspecial_new_break","cborspecial_new_null","cborspecial_new_undefined","__wbg_cborvalue_free","cborvalue_to_bytes","cborvalue_kind","cborvalue_as_int","cborvalue_as_bytes","cborvalue_as_text","cborvalue_as_array","cborvalue_as_object","cborvalue_as_tagged","cborvalue_as_special","cborvalue_from_bytes","int","cborvalue_new_int","cborvalue_new_bytes","text","cborvalue_new_text","arr","cborvalue_new_array","cborvalue_new_object","tagged","cborvalue_new_tagged","special","cborvalue_new_special","COSEEncrypt","__wbg_coseencrypt_free","coseencrypt_to_bytes","coseencrypt0_headers","Headers","coseencrypt0_ciphertext","coseencrypt_recipients","COSERecipients","coseencrypt_from_bytes","headers","ciphertext","recipients","coseencrypt_new","COSEEncrypt0","__wbg_coseencrypt0_free","coseencrypt0_to_bytes","coseencrypt0_from_bytes","coseencrypt0_new","COSEKey","__wbg_cosekey_free","cosekey_to_bytes","key_type","Label","cosekey_set_key_type","cosekey_key_type","key_id","cosekey_set_key_id","cosekey_key_id","algorithm_id","cosekey_set_algorithm_id","cosekey_algorithm_id","key_ops","Labels","cosekey_set_key_ops","cosekey_key_ops","base_init_vector","cosekey_set_base_init_vector","cosekey_base_init_vector","label","cosekey_header","cosekey_set_header","cosekey_from_bytes","cosekey_new","COSERecipient","__wbg_coserecipient_free","coserecipient_to_bytes","coserecipient_from_bytes","__wbg_coserecipients_free","coserecipients_to_bytes","coserecipients_len","coserecipients_get","coserecipients_add","coserecipients_from_bytes","coserecipients_new","COSESign","__wbg_cosesign_free","cosesign_to_bytes","cosesign_signatures","COSESignatures","cosesign_from_bytes","payload","signatures","cosesign_new","COSESign1","__wbg_cosesign1_free","cosesign1_to_bytes","cosesign1_signature","external_aad","external_payload","ptr1","len1","cosesign1_signed_data","SigStructure","cosesign1_from_bytes","signature","cosesign1_new","COSESign1Builder","__wbg_cosesign1builder_free","cosesign1builder_hash_payload","cosesign1builder_set_external_aad","cosesign1builder_make_data_to_sign","signed_sig_structure","cosesign1builder_build","is_payload_external","cosesign1builder_new","COSESignBuilder","__wbg_cosesignbuilder_free","cosesignbuilder_make_data_to_sign","cosesignbuilder_build","cosesignbuilder_new","COSESignature","__wbg_cosesignature_free","cosesignature_to_bytes","cosesignature_signature","cosesignature_from_bytes","cosesignature_new","__wbg_cosesignatures_free","cosesignatures_to_bytes","cosesignatures_get","cosesignatures_add","cosesignatures_from_bytes","__wbg_countersignature_free","countersignature_to_bytes","countersignature_signatures","countersignature_from_bytes","cose_signature","countersignature_new_single","cose_signatures","countersignature_new_multi","EdDSA25519Key","__wbg_eddsa25519key_free","private_key_bytes","eddsa25519key_set_private_key","eddsa25519key_is_for_signing","eddsa25519key_is_for_verifying","eddsa25519key_build","pubkey_bytes","eddsa25519key_new","HeaderMap","__wbg_headermap_free","headermap_to_bytes","headermap_set_algorithm_id","headermap_algorithm_id","criticality","headermap_set_criticality","headermap_criticality","content_type","headermap_set_key_id","headermap_key_id","init_vector","partial_init_vector","headermap_set_partial_init_vector","headermap_partial_init_vector","counter_signature","headermap_set_counter_signature","headermap_counter_signature","headermap_header","headermap_set_header","headermap_keys","headermap_from_bytes","headermap_new","__wbg_headers_free","headers_to_bytes","headers_protected","ProtectedHeaderMap","headers_unprotected","headers_from_bytes","protected_","unprotected_","headers_new","__wbg_int_free","int_is_positive","int_as_positive","int_as_negative","int_as_i32","int_new","int_new_negative","int_new_i32","__wbg_label_free","label_to_bytes","label_kind","label_as_int","label_as_text","label_from_bytes","label_new_int","label_new_text","id","label_from_algorithm_id","label_from_key_type","ec_key","label_from_ec_key","curve_type","label_from_curve_type","key_op","label_from_key_operation","__wbg_labels_free","labels_to_bytes","labels_get","labels_add","labels_from_bytes","PasswordEncryption","__wbg_passwordencryption_free","passwordencryption_to_bytes","passwordencryption_from_bytes","data","passwordencryption_new","__wbg_protectedheadermap_free","protectedheadermap_to_bytes","protectedheadermap_deserialized_headers","protectedheadermap_from_bytes","protectedheadermap_new_empty","header_map","protectedheadermap_new","PubKeyEncryption","__wbg_pubkeyencryption_free","pubkeyencryption_to_bytes","pubkeyencryption_from_bytes","pubkeyencryption_new","__wbg_sigstructure_free","sigstructure_to_bytes","sigstructure_context","sigstructure_body_protected","sigstructure_sign_protected","sigstructure_external_aad","sigstructure_payload","sign_protected","sigstructure_set_sign_protected","sigstructure_from_bytes","context","body_protected","sigstructure_new","SignedMessage","__wbg_signedmessage_free","signedmessage_to_bytes","signedmessage_to_user_facing_encoding","signedmessage_kind","signedmessage_as_cose_sign","signedmessage_as_cose_sign1","signedmessage_from_bytes","cose_sign","signedmessage_new_cose_sign","cose_sign1","signedmessage_new_cose_sign1","s","signedmessage_from_user_facing_encoding","__wbg_taggedcbor_free","taggedcbor_to_bytes","taggedcbor_tag","taggedcbor_value","taggedcbor_from_bytes","tag","taggedcbor_new","__wbindgen_object_drop_ref","arg0","__wbindgen_string_new","arg1","__wbindgen_debug_string","__wbindgen_throw","__wbindgen_rethrow","path","join","__dirname","readFileSync","wasmModule","WebAssembly","Module","wasmInstance","Instance","__wasm","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","_createClass","Constructor","protoProps","staticProps","_typeof","Symbol","iterator","constructor","_classCallCheck","TypeError"],"mappings":"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D,MAAM,CAACC,OAAP,CAAeC,UAAf,GAA4B,IAAxE,C;;;;;;;ACPA,QAAQ,mBAAO,CAAC,MAAqB;AACrC,kBAAkB,mBAAO,CAAC,MAAoC;AAC9D,sBAAsB,mBAAO,CAAC,MAAgC;AAC9D,eAAe,mBAAO,CAAC,MAAwB;AAC/C,eAAe,mBAAO,CAAC,MAAwB;AAC/C,wBAAwB,mBAAO,CAAC,MAAmC;;AAEnE;AACA;;AAEA;AACA;AACA,GAAG,+BAA+B;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;ACzBD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,MAAM;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,8BAA8B;AAClE;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,oBAAoB;AAC9B;AACA;;AAEA;AACA,UAAU,UAAU;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,sBAAsB;AACrD;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA","file":"web3-cardano-token.umd.2.js","sourcesContent":["exports.nextTick = function nextTick(fn) {\n    var args = Array.prototype.slice.call(arguments);\n    args.shift();\n    setTimeout(function () {\n        fn.apply(null, args);\n    }, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n","var createTypedArrayConstructor = require('../internals/typed-array-constructor');\n\n// `Float64Array` constructor\n// https://tc39.es/ecma262/#sec-typedarray-objects\ncreateTypedArrayConstructor('Float64', function (init) {\n  return function Float64Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"4e10\";","function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\n\nmodule.exports = _taggedTemplateLiteral;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","let imports = {};\nimports['__wbindgen_placeholder__'] = module.exports;\nlet wasm;\nconst { TextDecoder, TextEncoder } = require(String.raw`util`);\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachegetFloat64Memory0 = null;\nfunction getFloat64Memory0() {\n    if (cachegetFloat64Memory0 === null || cachegetFloat64Memory0.buffer !== wasm.memory.buffer) {\n        cachegetFloat64Memory0 = new Float64Array(wasm.memory.buffer);\n    }\n    return cachegetFloat64Memory0;\n}\n/**\n*/\nmodule.exports.LabelKind = Object.freeze({ Int:0,\"0\":\"Int\",Text:1,\"1\":\"Text\", });\n/**\n*/\nmodule.exports.SignedMessageKind = Object.freeze({ COSESIGN:0,\"0\":\"COSESIGN\",COSESIGN1:1,\"1\":\"COSESIGN1\", });\n/**\n*/\nmodule.exports.SigContext = Object.freeze({ Signature:0,\"0\":\"Signature\",Signature1:1,\"1\":\"Signature1\",CounterSignature:2,\"2\":\"CounterSignature\", });\n/**\n*/\nmodule.exports.CBORSpecialType = Object.freeze({ Bool:0,\"0\":\"Bool\",Float:1,\"1\":\"Float\",Unassigned:2,\"2\":\"Unassigned\",Break:3,\"3\":\"Break\",Undefined:4,\"4\":\"Undefined\",Null:5,\"5\":\"Null\", });\n/**\n*/\nmodule.exports.CBORValueKind = Object.freeze({ Int:0,\"0\":\"Int\",Bytes:1,\"1\":\"Bytes\",Text:2,\"2\":\"Text\",Array:3,\"3\":\"Array\",Object:4,\"4\":\"Object\",TaggedCBOR:5,\"5\":\"TaggedCBOR\",Special:6,\"6\":\"Special\", });\n/**\n*/\nmodule.exports.AlgorithmId = Object.freeze({\n/**\n*r\" EdDSA (Pure EdDSA, not HashedEdDSA) - the algorithm used for Cardano addresses\n*/\nEdDSA:0,\"0\":\"EdDSA\",\n/**\n*r\" ChaCha20/Poly1305 w/ 256-bit key, 128-bit tag\n*/\nChaCha20Poly1305:1,\"1\":\"ChaCha20Poly1305\", });\n/**\n*/\nmodule.exports.KeyType = Object.freeze({\n/**\n*r\" octet key pair\n*/\nOKP:0,\"0\":\"OKP\",\n/**\n*r\" 2-coord EC\n*/\nEC2:1,\"1\":\"EC2\",Symmetric:2,\"2\":\"Symmetric\", });\n/**\n*/\nmodule.exports.ECKey = Object.freeze({ CRV:0,\"0\":\"CRV\",X:1,\"1\":\"X\",Y:2,\"2\":\"Y\",D:3,\"3\":\"D\", });\n/**\n*/\nmodule.exports.CurveType = Object.freeze({ P256:0,\"0\":\"P256\",P384:1,\"1\":\"P384\",P521:2,\"2\":\"P521\",X25519:3,\"3\":\"X25519\",X448:4,\"4\":\"X448\",Ed25519:5,\"5\":\"Ed25519\",Ed448:6,\"6\":\"Ed448\", });\n/**\n*/\nmodule.exports.KeyOperation = Object.freeze({ Sign:0,\"0\":\"Sign\",Verify:1,\"1\":\"Verify\",Encrypt:2,\"2\":\"Encrypt\",Decrypt:3,\"3\":\"Decrypt\",WrapKey:4,\"4\":\"WrapKey\",UnwrapKey:5,\"5\":\"UnwrapKey\",DeriveKey:6,\"6\":\"DeriveKey\",DeriveBits:7,\"7\":\"DeriveBits\", });\n/**\n*/\nclass BigNum {\n\n    static __wrap(ptr) {\n        const obj = Object.create(BigNum.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_bignum_free(ptr);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    to_bytes() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.bignum_to_bytes(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Uint8Array} bytes\n    * @returns {BigNum}\n    */\n    static from_bytes(bytes) {\n        var ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.bignum_from_bytes(ptr0, len0);\n        return BigNum.__wrap(ret);\n    }\n    /**\n    * @param {string} string\n    * @returns {BigNum}\n    */\n    static from_str(string) {\n        var ptr0 = passStringToWasm0(string, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.bignum_from_str(ptr0, len0);\n        return BigNum.__wrap(ret);\n    }\n    /**\n    * @returns {string}\n    */\n    to_str() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.bignum_to_str(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @param {BigNum} other\n    * @returns {BigNum}\n    */\n    checked_mul(other) {\n        _assertClass(other, BigNum);\n        var ret = wasm.bignum_checked_mul(this.ptr, other.ptr);\n        return BigNum.__wrap(ret);\n    }\n    /**\n    * @param {BigNum} other\n    * @returns {BigNum}\n    */\n    checked_add(other) {\n        _assertClass(other, BigNum);\n        var ret = wasm.bignum_checked_add(this.ptr, other.ptr);\n        return BigNum.__wrap(ret);\n    }\n    /**\n    * @param {BigNum} other\n    * @returns {BigNum}\n    */\n    checked_sub(other) {\n        _assertClass(other, BigNum);\n        var ret = wasm.bignum_checked_sub(this.ptr, other.ptr);\n        return BigNum.__wrap(ret);\n    }\n}\nmodule.exports.BigNum = BigNum;\n/**\n*/\nclass CBORArray {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CBORArray.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_cborarray_free(ptr);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    to_bytes() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.cborarray_to_bytes(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Uint8Array} bytes\n    * @returns {CBORArray}\n    */\n    static from_bytes(bytes) {\n        var ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.cborarray_from_bytes(ptr0, len0);\n        return CBORArray.__wrap(ret);\n    }\n    /**\n    * @returns {CBORArray}\n    */\n    static new() {\n        var ret = wasm.cborarray_new();\n        return CBORArray.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    len() {\n        var ret = wasm.cborarray_len(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} index\n    * @returns {CBORValue}\n    */\n    get(index) {\n        var ret = wasm.cborarray_get(this.ptr, index);\n        return CBORValue.__wrap(ret);\n    }\n    /**\n    * @param {CBORValue} elem\n    */\n    add(elem) {\n        _assertClass(elem, CBORValue);\n        wasm.cborarray_add(this.ptr, elem.ptr);\n    }\n    /**\n    * @param {boolean} use_definite\n    */\n    set_definite_encoding(use_definite) {\n        wasm.cborarray_set_definite_encoding(this.ptr, use_definite);\n    }\n    /**\n    * @returns {boolean}\n    */\n    is_definite() {\n        var ret = wasm.cborarray_is_definite(this.ptr);\n        return ret !== 0;\n    }\n}\nmodule.exports.CBORArray = CBORArray;\n/**\n*/\nclass CBORObject {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CBORObject.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_cborobject_free(ptr);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    to_bytes() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.cborobject_to_bytes(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Uint8Array} bytes\n    * @returns {CBORObject}\n    */\n    static from_bytes(bytes) {\n        var ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.cborobject_from_bytes(ptr0, len0);\n        return CBORObject.__wrap(ret);\n    }\n    /**\n    * @returns {CBORObject}\n    */\n    static new() {\n        var ret = wasm.cborobject_new();\n        return CBORObject.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    len() {\n        var ret = wasm.cborobject_len(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {CBORValue} key\n    * @param {CBORValue} value\n    * @returns {CBORValue | undefined}\n    */\n    insert(key, value) {\n        _assertClass(key, CBORValue);\n        _assertClass(value, CBORValue);\n        var ret = wasm.cborobject_insert(this.ptr, key.ptr, value.ptr);\n        return ret === 0 ? undefined : CBORValue.__wrap(ret);\n    }\n    /**\n    * @param {CBORValue} key\n    * @returns {CBORValue | undefined}\n    */\n    get(key) {\n        _assertClass(key, CBORValue);\n        var ret = wasm.cborobject_get(this.ptr, key.ptr);\n        return ret === 0 ? undefined : CBORValue.__wrap(ret);\n    }\n    /**\n    * @returns {CBORArray}\n    */\n    keys() {\n        var ret = wasm.cborobject_keys(this.ptr);\n        return CBORArray.__wrap(ret);\n    }\n    /**\n    * @param {boolean} use_definite\n    */\n    set_definite_encoding(use_definite) {\n        wasm.cborobject_set_definite_encoding(this.ptr, use_definite);\n    }\n    /**\n    * @returns {boolean}\n    */\n    is_definite() {\n        var ret = wasm.cborobject_is_definite(this.ptr);\n        return ret !== 0;\n    }\n}\nmodule.exports.CBORObject = CBORObject;\n/**\n*/\nclass CBORSpecial {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CBORSpecial.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_cborspecial_free(ptr);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    to_bytes() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.cborspecial_to_bytes(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Uint8Array} bytes\n    * @returns {CBORSpecial}\n    */\n    static from_bytes(bytes) {\n        var ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.cborspecial_from_bytes(ptr0, len0);\n        return CBORSpecial.__wrap(ret);\n    }\n    /**\n    * @param {boolean} b\n    * @returns {CBORSpecial}\n    */\n    static new_bool(b) {\n        var ret = wasm.cborspecial_new_bool(b);\n        return CBORSpecial.__wrap(ret);\n    }\n    /**\n    * @param {number} u\n    * @returns {CBORSpecial}\n    */\n    static new_unassigned(u) {\n        var ret = wasm.cborspecial_new_unassigned(u);\n        return CBORSpecial.__wrap(ret);\n    }\n    /**\n    * @returns {CBORSpecial}\n    */\n    static new_break() {\n        var ret = wasm.cborspecial_new_break();\n        return CBORSpecial.__wrap(ret);\n    }\n    /**\n    * @returns {CBORSpecial}\n    */\n    static new_null() {\n        var ret = wasm.cborspecial_new_null();\n        return CBORSpecial.__wrap(ret);\n    }\n    /**\n    * @returns {CBORSpecial}\n    */\n    static new_undefined() {\n        var ret = wasm.cborspecial_new_undefined();\n        return CBORSpecial.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    kind() {\n        var ret = wasm.cborspecial_kind(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {boolean | undefined}\n    */\n    as_bool() {\n        var ret = wasm.cborspecial_as_bool(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    * @returns {number | undefined}\n    */\n    as_float() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.cborspecial_as_float(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat64Memory0()[retptr / 8 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {number | undefined}\n    */\n    as_unassigned() {\n        var ret = wasm.cborspecial_as_unassigned(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret;\n    }\n}\nmodule.exports.CBORSpecial = CBORSpecial;\n/**\n*/\nclass CBORValue {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CBORValue.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_cborvalue_free(ptr);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    to_bytes() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.cborvalue_to_bytes(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Uint8Array} bytes\n    * @returns {CBORValue}\n    */\n    static from_bytes(bytes) {\n        var ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.cborvalue_from_bytes(ptr0, len0);\n        return CBORValue.__wrap(ret);\n    }\n    /**\n    * @param {Int} int\n    * @returns {CBORValue}\n    */\n    static new_int(int) {\n        _assertClass(int, Int);\n        var ret = wasm.cborvalue_new_int(int.ptr);\n        return CBORValue.__wrap(ret);\n    }\n    /**\n    * @param {Uint8Array} bytes\n    * @returns {CBORValue}\n    */\n    static new_bytes(bytes) {\n        var ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.cborvalue_new_bytes(ptr0, len0);\n        return CBORValue.__wrap(ret);\n    }\n    /**\n    * @param {string} text\n    * @returns {CBORValue}\n    */\n    static new_text(text) {\n        var ptr0 = passStringToWasm0(text, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.cborvalue_new_text(ptr0, len0);\n        return CBORValue.__wrap(ret);\n    }\n    /**\n    * @param {CBORArray} arr\n    * @returns {CBORValue}\n    */\n    static new_array(arr) {\n        _assertClass(arr, CBORArray);\n        var ret = wasm.cborvalue_new_array(arr.ptr);\n        return CBORValue.__wrap(ret);\n    }\n    /**\n    * @param {CBORObject} obj\n    * @returns {CBORValue}\n    */\n    static new_object(obj) {\n        _assertClass(obj, CBORObject);\n        var ret = wasm.cborvalue_new_object(obj.ptr);\n        return CBORValue.__wrap(ret);\n    }\n    /**\n    * @param {TaggedCBOR} tagged\n    * @returns {CBORValue}\n    */\n    static new_tagged(tagged) {\n        _assertClass(tagged, TaggedCBOR);\n        var ret = wasm.cborvalue_new_tagged(tagged.ptr);\n        return CBORValue.__wrap(ret);\n    }\n    /**\n    * @param {CBORSpecial} special\n    * @returns {CBORValue}\n    */\n    static new_special(special) {\n        _assertClass(special, CBORSpecial);\n        var ret = wasm.cborvalue_new_special(special.ptr);\n        return CBORValue.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    kind() {\n        var ret = wasm.cborvalue_kind(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {Int | undefined}\n    */\n    as_int() {\n        var ret = wasm.cborvalue_as_int(this.ptr);\n        return ret === 0 ? undefined : Int.__wrap(ret);\n    }\n    /**\n    * @returns {Uint8Array | undefined}\n    */\n    as_bytes() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.cborvalue_as_bytes(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getArrayU8FromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {string | undefined}\n    */\n    as_text() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.cborvalue_as_text(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getStringFromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {CBORArray | undefined}\n    */\n    as_array() {\n        var ret = wasm.cborvalue_as_array(this.ptr);\n        return ret === 0 ? undefined : CBORArray.__wrap(ret);\n    }\n    /**\n    * @returns {CBORObject | undefined}\n    */\n    as_object() {\n        var ret = wasm.cborvalue_as_object(this.ptr);\n        return ret === 0 ? undefined : CBORObject.__wrap(ret);\n    }\n    /**\n    * @returns {TaggedCBOR | undefined}\n    */\n    as_tagged() {\n        var ret = wasm.cborvalue_as_tagged(this.ptr);\n        return ret === 0 ? undefined : TaggedCBOR.__wrap(ret);\n    }\n    /**\n    * @returns {CBORSpecial | undefined}\n    */\n    as_special() {\n        var ret = wasm.cborvalue_as_special(this.ptr);\n        return ret === 0 ? undefined : CBORSpecial.__wrap(ret);\n    }\n}\nmodule.exports.CBORValue = CBORValue;\n/**\n*/\nclass COSEEncrypt {\n\n    static __wrap(ptr) {\n        const obj = Object.create(COSEEncrypt.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_coseencrypt_free(ptr);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    to_bytes() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.coseencrypt_to_bytes(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Uint8Array} bytes\n    * @returns {COSEEncrypt}\n    */\n    static from_bytes(bytes) {\n        var ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.coseencrypt_from_bytes(ptr0, len0);\n        return COSEEncrypt.__wrap(ret);\n    }\n    /**\n    * @returns {Headers}\n    */\n    headers() {\n        var ret = wasm.coseencrypt0_headers(this.ptr);\n        return Headers.__wrap(ret);\n    }\n    /**\n    * @returns {Uint8Array | undefined}\n    */\n    ciphertext() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.coseencrypt0_ciphertext(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getArrayU8FromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {COSERecipients}\n    */\n    recipients() {\n        var ret = wasm.coseencrypt_recipients(this.ptr);\n        return COSERecipients.__wrap(ret);\n    }\n    /**\n    * @param {Headers} headers\n    * @param {Uint8Array | undefined} ciphertext\n    * @param {COSERecipients} recipients\n    * @returns {COSEEncrypt}\n    */\n    static new(headers, ciphertext, recipients) {\n        _assertClass(headers, Headers);\n        var ptr0 = isLikeNone(ciphertext) ? 0 : passArray8ToWasm0(ciphertext, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        _assertClass(recipients, COSERecipients);\n        var ret = wasm.coseencrypt_new(headers.ptr, ptr0, len0, recipients.ptr);\n        return COSEEncrypt.__wrap(ret);\n    }\n}\nmodule.exports.COSEEncrypt = COSEEncrypt;\n/**\n*/\nclass COSEEncrypt0 {\n\n    static __wrap(ptr) {\n        const obj = Object.create(COSEEncrypt0.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_coseencrypt0_free(ptr);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    to_bytes() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.coseencrypt0_to_bytes(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Uint8Array} bytes\n    * @returns {COSEEncrypt0}\n    */\n    static from_bytes(bytes) {\n        var ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.coseencrypt0_from_bytes(ptr0, len0);\n        return COSEEncrypt0.__wrap(ret);\n    }\n    /**\n    * @returns {Headers}\n    */\n    headers() {\n        var ret = wasm.coseencrypt0_headers(this.ptr);\n        return Headers.__wrap(ret);\n    }\n    /**\n    * @returns {Uint8Array | undefined}\n    */\n    ciphertext() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.coseencrypt0_ciphertext(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getArrayU8FromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Headers} headers\n    * @param {Uint8Array | undefined} ciphertext\n    * @returns {COSEEncrypt0}\n    */\n    static new(headers, ciphertext) {\n        _assertClass(headers, Headers);\n        var ptr0 = isLikeNone(ciphertext) ? 0 : passArray8ToWasm0(ciphertext, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.coseencrypt0_new(headers.ptr, ptr0, len0);\n        return COSEEncrypt0.__wrap(ret);\n    }\n}\nmodule.exports.COSEEncrypt0 = COSEEncrypt0;\n/**\n*/\nclass COSEKey {\n\n    static __wrap(ptr) {\n        const obj = Object.create(COSEKey.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_cosekey_free(ptr);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    to_bytes() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.cosekey_to_bytes(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Uint8Array} bytes\n    * @returns {COSEKey}\n    */\n    static from_bytes(bytes) {\n        var ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.cosekey_from_bytes(ptr0, len0);\n        return COSEKey.__wrap(ret);\n    }\n    /**\n    * @param {Label} key_type\n    */\n    set_key_type(key_type) {\n        _assertClass(key_type, Label);\n        wasm.cosekey_set_key_type(this.ptr, key_type.ptr);\n    }\n    /**\n    * @returns {Label}\n    */\n    key_type() {\n        var ret = wasm.cosekey_key_type(this.ptr);\n        return Label.__wrap(ret);\n    }\n    /**\n    * @param {Uint8Array} key_id\n    */\n    set_key_id(key_id) {\n        var ptr0 = passArray8ToWasm0(key_id, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.cosekey_set_key_id(this.ptr, ptr0, len0);\n    }\n    /**\n    * @returns {Uint8Array | undefined}\n    */\n    key_id() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.cosekey_key_id(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getArrayU8FromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Label} algorithm_id\n    */\n    set_algorithm_id(algorithm_id) {\n        _assertClass(algorithm_id, Label);\n        wasm.cosekey_set_algorithm_id(this.ptr, algorithm_id.ptr);\n    }\n    /**\n    * @returns {Label | undefined}\n    */\n    algorithm_id() {\n        var ret = wasm.cosekey_algorithm_id(this.ptr);\n        return ret === 0 ? undefined : Label.__wrap(ret);\n    }\n    /**\n    * @param {Labels} key_ops\n    */\n    set_key_ops(key_ops) {\n        _assertClass(key_ops, Labels);\n        wasm.cosekey_set_key_ops(this.ptr, key_ops.ptr);\n    }\n    /**\n    * @returns {Labels | undefined}\n    */\n    key_ops() {\n        var ret = wasm.cosekey_key_ops(this.ptr);\n        return ret === 0 ? undefined : Labels.__wrap(ret);\n    }\n    /**\n    * @param {Uint8Array} base_init_vector\n    */\n    set_base_init_vector(base_init_vector) {\n        var ptr0 = passArray8ToWasm0(base_init_vector, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.cosekey_set_base_init_vector(this.ptr, ptr0, len0);\n    }\n    /**\n    * @returns {Uint8Array | undefined}\n    */\n    base_init_vector() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.cosekey_base_init_vector(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getArrayU8FromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Label} label\n    * @returns {CBORValue | undefined}\n    */\n    header(label) {\n        _assertClass(label, Label);\n        var ret = wasm.cosekey_header(this.ptr, label.ptr);\n        return ret === 0 ? undefined : CBORValue.__wrap(ret);\n    }\n    /**\n    * @param {Label} label\n    * @param {CBORValue} value\n    */\n    set_header(label, value) {\n        _assertClass(label, Label);\n        _assertClass(value, CBORValue);\n        wasm.cosekey_set_header(this.ptr, label.ptr, value.ptr);\n    }\n    /**\n    * @param {Label} key_type\n    * @returns {COSEKey}\n    */\n    static new(key_type) {\n        _assertClass(key_type, Label);\n        var ret = wasm.cosekey_new(key_type.ptr);\n        return COSEKey.__wrap(ret);\n    }\n}\nmodule.exports.COSEKey = COSEKey;\n/**\n*/\nclass COSERecipient {\n\n    static __wrap(ptr) {\n        const obj = Object.create(COSERecipient.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_coserecipient_free(ptr);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    to_bytes() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.coserecipient_to_bytes(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Uint8Array} bytes\n    * @returns {COSERecipient}\n    */\n    static from_bytes(bytes) {\n        var ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.coserecipient_from_bytes(ptr0, len0);\n        return COSERecipient.__wrap(ret);\n    }\n    /**\n    * @returns {Headers}\n    */\n    headers() {\n        var ret = wasm.coseencrypt0_headers(this.ptr);\n        return Headers.__wrap(ret);\n    }\n    /**\n    * @returns {Uint8Array | undefined}\n    */\n    ciphertext() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.coseencrypt0_ciphertext(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getArrayU8FromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Headers} headers\n    * @param {Uint8Array | undefined} ciphertext\n    * @returns {COSERecipient}\n    */\n    static new(headers, ciphertext) {\n        _assertClass(headers, Headers);\n        var ptr0 = isLikeNone(ciphertext) ? 0 : passArray8ToWasm0(ciphertext, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.coseencrypt0_new(headers.ptr, ptr0, len0);\n        return COSERecipient.__wrap(ret);\n    }\n}\nmodule.exports.COSERecipient = COSERecipient;\n/**\n*/\nclass COSERecipients {\n\n    static __wrap(ptr) {\n        const obj = Object.create(COSERecipients.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_coserecipients_free(ptr);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    to_bytes() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.coserecipients_to_bytes(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Uint8Array} bytes\n    * @returns {COSERecipients}\n    */\n    static from_bytes(bytes) {\n        var ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.coserecipients_from_bytes(ptr0, len0);\n        return COSERecipients.__wrap(ret);\n    }\n    /**\n    * @returns {COSERecipients}\n    */\n    static new() {\n        var ret = wasm.coserecipients_new();\n        return COSERecipients.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    len() {\n        var ret = wasm.coserecipients_len(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} index\n    * @returns {COSERecipient}\n    */\n    get(index) {\n        var ret = wasm.coserecipients_get(this.ptr, index);\n        return COSERecipient.__wrap(ret);\n    }\n    /**\n    * @param {COSERecipient} elem\n    */\n    add(elem) {\n        _assertClass(elem, COSERecipient);\n        wasm.coserecipients_add(this.ptr, elem.ptr);\n    }\n}\nmodule.exports.COSERecipients = COSERecipients;\n/**\n*/\nclass COSESign {\n\n    static __wrap(ptr) {\n        const obj = Object.create(COSESign.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_cosesign_free(ptr);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    to_bytes() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.cosesign_to_bytes(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Uint8Array} bytes\n    * @returns {COSESign}\n    */\n    static from_bytes(bytes) {\n        var ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.cosesign_from_bytes(ptr0, len0);\n        return COSESign.__wrap(ret);\n    }\n    /**\n    * @returns {Headers}\n    */\n    headers() {\n        var ret = wasm.coseencrypt0_headers(this.ptr);\n        return Headers.__wrap(ret);\n    }\n    /**\n    * @returns {Uint8Array | undefined}\n    */\n    payload() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.coseencrypt0_ciphertext(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getArrayU8FromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {COSESignatures}\n    */\n    signatures() {\n        var ret = wasm.cosesign_signatures(this.ptr);\n        return COSESignatures.__wrap(ret);\n    }\n    /**\n    * @param {Headers} headers\n    * @param {Uint8Array | undefined} payload\n    * @param {COSESignatures} signatures\n    * @returns {COSESign}\n    */\n    static new(headers, payload, signatures) {\n        _assertClass(headers, Headers);\n        var ptr0 = isLikeNone(payload) ? 0 : passArray8ToWasm0(payload, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        _assertClass(signatures, COSESignatures);\n        var ret = wasm.cosesign_new(headers.ptr, ptr0, len0, signatures.ptr);\n        return COSESign.__wrap(ret);\n    }\n}\nmodule.exports.COSESign = COSESign;\n/**\n*/\nclass COSESign1 {\n\n    static __wrap(ptr) {\n        const obj = Object.create(COSESign1.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_cosesign1_free(ptr);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    to_bytes() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.cosesign1_to_bytes(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Uint8Array} bytes\n    * @returns {COSESign1}\n    */\n    static from_bytes(bytes) {\n        var ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.cosesign1_from_bytes(ptr0, len0);\n        return COSESign1.__wrap(ret);\n    }\n    /**\n    * @returns {Headers}\n    */\n    headers() {\n        var ret = wasm.coseencrypt0_headers(this.ptr);\n        return Headers.__wrap(ret);\n    }\n    /**\n    * @returns {Uint8Array | undefined}\n    */\n    payload() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.coseencrypt0_ciphertext(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getArrayU8FromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    signature() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.cosesign1_signature(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * For verifying, we will want to reverse-construct this SigStructure to check the signature against\n    * # Arguments\n    * * `external_aad` - External application data - see RFC 8152 section 4.3. Set to None if not using this.\n    * @param {Uint8Array | undefined} external_aad\n    * @param {Uint8Array | undefined} external_payload\n    * @returns {SigStructure}\n    */\n    signed_data(external_aad, external_payload) {\n        var ptr0 = isLikeNone(external_aad) ? 0 : passArray8ToWasm0(external_aad, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = isLikeNone(external_payload) ? 0 : passArray8ToWasm0(external_payload, wasm.__wbindgen_malloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ret = wasm.cosesign1_signed_data(this.ptr, ptr0, len0, ptr1, len1);\n        return SigStructure.__wrap(ret);\n    }\n    /**\n    * @param {Headers} headers\n    * @param {Uint8Array | undefined} payload\n    * @param {Uint8Array} signature\n    * @returns {COSESign1}\n    */\n    static new(headers, payload, signature) {\n        _assertClass(headers, Headers);\n        var ptr0 = isLikeNone(payload) ? 0 : passArray8ToWasm0(payload, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passArray8ToWasm0(signature, wasm.__wbindgen_malloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ret = wasm.cosesign1_new(headers.ptr, ptr0, len0, ptr1, len1);\n        return COSESign1.__wrap(ret);\n    }\n}\nmodule.exports.COSESign1 = COSESign1;\n/**\n*/\nclass COSESign1Builder {\n\n    static __wrap(ptr) {\n        const obj = Object.create(COSESign1Builder.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_cosesign1builder_free(ptr);\n    }\n    /**\n    * @param {Headers} headers\n    * @param {Uint8Array} payload\n    * @param {boolean} is_payload_external\n    * @returns {COSESign1Builder}\n    */\n    static new(headers, payload, is_payload_external) {\n        _assertClass(headers, Headers);\n        var ptr0 = passArray8ToWasm0(payload, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.cosesign1builder_new(headers.ptr, ptr0, len0, is_payload_external);\n        return COSESign1Builder.__wrap(ret);\n    }\n    /**\n    */\n    hash_payload() {\n        wasm.cosesign1builder_hash_payload(this.ptr);\n    }\n    /**\n    * @param {Uint8Array} external_aad\n    */\n    set_external_aad(external_aad) {\n        var ptr0 = passArray8ToWasm0(external_aad, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.cosesign1builder_set_external_aad(this.ptr, ptr0, len0);\n    }\n    /**\n    * @returns {SigStructure}\n    */\n    make_data_to_sign() {\n        var ret = wasm.cosesign1builder_make_data_to_sign(this.ptr);\n        return SigStructure.__wrap(ret);\n    }\n    /**\n    * @param {Uint8Array} signed_sig_structure\n    * @returns {COSESign1}\n    */\n    build(signed_sig_structure) {\n        var ptr0 = passArray8ToWasm0(signed_sig_structure, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.cosesign1builder_build(this.ptr, ptr0, len0);\n        return COSESign1.__wrap(ret);\n    }\n}\nmodule.exports.COSESign1Builder = COSESign1Builder;\n/**\n*/\nclass COSESignBuilder {\n\n    static __wrap(ptr) {\n        const obj = Object.create(COSESignBuilder.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_cosesignbuilder_free(ptr);\n    }\n    /**\n    * @param {Headers} headers\n    * @param {Uint8Array} payload\n    * @param {boolean} is_payload_external\n    * @returns {COSESignBuilder}\n    */\n    static new(headers, payload, is_payload_external) {\n        _assertClass(headers, Headers);\n        var ptr0 = passArray8ToWasm0(payload, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.cosesignbuilder_new(headers.ptr, ptr0, len0, is_payload_external);\n        return COSESignBuilder.__wrap(ret);\n    }\n    /**\n    */\n    hash_payload() {\n        wasm.cosesign1builder_hash_payload(this.ptr);\n    }\n    /**\n    * @param {Uint8Array} external_aad\n    */\n    set_external_aad(external_aad) {\n        var ptr0 = passArray8ToWasm0(external_aad, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.cosesign1builder_set_external_aad(this.ptr, ptr0, len0);\n    }\n    /**\n    * @returns {SigStructure}\n    */\n    make_data_to_sign() {\n        var ret = wasm.cosesignbuilder_make_data_to_sign(this.ptr);\n        return SigStructure.__wrap(ret);\n    }\n    /**\n    * @param {COSESignatures} signed_sig_structure\n    * @returns {COSESign}\n    */\n    build(signed_sig_structure) {\n        _assertClass(signed_sig_structure, COSESignatures);\n        var ret = wasm.cosesignbuilder_build(this.ptr, signed_sig_structure.ptr);\n        return COSESign.__wrap(ret);\n    }\n}\nmodule.exports.COSESignBuilder = COSESignBuilder;\n/**\n*/\nclass COSESignature {\n\n    static __wrap(ptr) {\n        const obj = Object.create(COSESignature.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_cosesignature_free(ptr);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    to_bytes() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.cosesignature_to_bytes(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Uint8Array} bytes\n    * @returns {COSESignature}\n    */\n    static from_bytes(bytes) {\n        var ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.cosesignature_from_bytes(ptr0, len0);\n        return COSESignature.__wrap(ret);\n    }\n    /**\n    * @returns {Headers}\n    */\n    headers() {\n        var ret = wasm.coseencrypt0_headers(this.ptr);\n        return Headers.__wrap(ret);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    signature() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.cosesignature_signature(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Headers} headers\n    * @param {Uint8Array} signature\n    * @returns {COSESignature}\n    */\n    static new(headers, signature) {\n        _assertClass(headers, Headers);\n        var ptr0 = passArray8ToWasm0(signature, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.cosesignature_new(headers.ptr, ptr0, len0);\n        return COSESignature.__wrap(ret);\n    }\n}\nmodule.exports.COSESignature = COSESignature;\n/**\n*/\nclass COSESignatures {\n\n    static __wrap(ptr) {\n        const obj = Object.create(COSESignatures.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_cosesignatures_free(ptr);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    to_bytes() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.cosesignatures_to_bytes(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Uint8Array} bytes\n    * @returns {COSESignatures}\n    */\n    static from_bytes(bytes) {\n        var ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.cosesignatures_from_bytes(ptr0, len0);\n        return COSESignatures.__wrap(ret);\n    }\n    /**\n    * @returns {COSESignatures}\n    */\n    static new() {\n        var ret = wasm.coserecipients_new();\n        return COSESignatures.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    len() {\n        var ret = wasm.coserecipients_len(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} index\n    * @returns {COSESignature}\n    */\n    get(index) {\n        var ret = wasm.cosesignatures_get(this.ptr, index);\n        return COSESignature.__wrap(ret);\n    }\n    /**\n    * @param {COSESignature} elem\n    */\n    add(elem) {\n        _assertClass(elem, COSESignature);\n        wasm.cosesignatures_add(this.ptr, elem.ptr);\n    }\n}\nmodule.exports.COSESignatures = COSESignatures;\n/**\n*/\nclass CounterSignature {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CounterSignature.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_countersignature_free(ptr);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    to_bytes() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.countersignature_to_bytes(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Uint8Array} bytes\n    * @returns {CounterSignature}\n    */\n    static from_bytes(bytes) {\n        var ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.countersignature_from_bytes(ptr0, len0);\n        return CounterSignature.__wrap(ret);\n    }\n    /**\n    * @param {COSESignature} cose_signature\n    * @returns {CounterSignature}\n    */\n    static new_single(cose_signature) {\n        _assertClass(cose_signature, COSESignature);\n        var ret = wasm.countersignature_new_single(cose_signature.ptr);\n        return CounterSignature.__wrap(ret);\n    }\n    /**\n    * @param {COSESignatures} cose_signatures\n    * @returns {CounterSignature}\n    */\n    static new_multi(cose_signatures) {\n        _assertClass(cose_signatures, COSESignatures);\n        var ret = wasm.countersignature_new_multi(cose_signatures.ptr);\n        return CounterSignature.__wrap(ret);\n    }\n    /**\n    * @returns {COSESignatures}\n    */\n    signatures() {\n        var ret = wasm.countersignature_signatures(this.ptr);\n        return COSESignatures.__wrap(ret);\n    }\n}\nmodule.exports.CounterSignature = CounterSignature;\n/**\n*/\nclass EdDSA25519Key {\n\n    static __wrap(ptr) {\n        const obj = Object.create(EdDSA25519Key.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_eddsa25519key_free(ptr);\n    }\n    /**\n    * @param {Uint8Array} pubkey_bytes\n    * @returns {EdDSA25519Key}\n    */\n    static new(pubkey_bytes) {\n        var ptr0 = passArray8ToWasm0(pubkey_bytes, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.eddsa25519key_new(ptr0, len0);\n        return EdDSA25519Key.__wrap(ret);\n    }\n    /**\n    * @param {Uint8Array} private_key_bytes\n    */\n    set_private_key(private_key_bytes) {\n        var ptr0 = passArray8ToWasm0(private_key_bytes, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.eddsa25519key_set_private_key(this.ptr, ptr0, len0);\n    }\n    /**\n    */\n    is_for_signing() {\n        wasm.eddsa25519key_is_for_signing(this.ptr);\n    }\n    /**\n    */\n    is_for_verifying() {\n        wasm.eddsa25519key_is_for_verifying(this.ptr);\n    }\n    /**\n    * @returns {COSEKey}\n    */\n    build() {\n        var ret = wasm.eddsa25519key_build(this.ptr);\n        return COSEKey.__wrap(ret);\n    }\n}\nmodule.exports.EdDSA25519Key = EdDSA25519Key;\n/**\n*/\nclass HeaderMap {\n\n    static __wrap(ptr) {\n        const obj = Object.create(HeaderMap.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_headermap_free(ptr);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    to_bytes() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.headermap_to_bytes(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Uint8Array} bytes\n    * @returns {HeaderMap}\n    */\n    static from_bytes(bytes) {\n        var ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.headermap_from_bytes(ptr0, len0);\n        return HeaderMap.__wrap(ret);\n    }\n    /**\n    * @param {Label} algorithm_id\n    */\n    set_algorithm_id(algorithm_id) {\n        _assertClass(algorithm_id, Label);\n        wasm.headermap_set_algorithm_id(this.ptr, algorithm_id.ptr);\n    }\n    /**\n    * @returns {Label | undefined}\n    */\n    algorithm_id() {\n        var ret = wasm.headermap_algorithm_id(this.ptr);\n        return ret === 0 ? undefined : Label.__wrap(ret);\n    }\n    /**\n    * @param {Labels} criticality\n    */\n    set_criticality(criticality) {\n        _assertClass(criticality, Labels);\n        wasm.headermap_set_criticality(this.ptr, criticality.ptr);\n    }\n    /**\n    * @returns {Labels | undefined}\n    */\n    criticality() {\n        var ret = wasm.headermap_criticality(this.ptr);\n        return ret === 0 ? undefined : Labels.__wrap(ret);\n    }\n    /**\n    * @param {Label} content_type\n    */\n    set_content_type(content_type) {\n        _assertClass(content_type, Label);\n        wasm.cosekey_set_algorithm_id(this.ptr, content_type.ptr);\n    }\n    /**\n    * @returns {Label | undefined}\n    */\n    content_type() {\n        var ret = wasm.cosekey_algorithm_id(this.ptr);\n        return ret === 0 ? undefined : Label.__wrap(ret);\n    }\n    /**\n    * @param {Uint8Array} key_id\n    */\n    set_key_id(key_id) {\n        var ptr0 = passArray8ToWasm0(key_id, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.headermap_set_key_id(this.ptr, ptr0, len0);\n    }\n    /**\n    * @returns {Uint8Array | undefined}\n    */\n    key_id() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.headermap_key_id(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getArrayU8FromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Uint8Array} init_vector\n    */\n    set_init_vector(init_vector) {\n        var ptr0 = passArray8ToWasm0(init_vector, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.cosekey_set_base_init_vector(this.ptr, ptr0, len0);\n    }\n    /**\n    * @returns {Uint8Array | undefined}\n    */\n    init_vector() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.cosekey_base_init_vector(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getArrayU8FromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Uint8Array} partial_init_vector\n    */\n    set_partial_init_vector(partial_init_vector) {\n        var ptr0 = passArray8ToWasm0(partial_init_vector, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.headermap_set_partial_init_vector(this.ptr, ptr0, len0);\n    }\n    /**\n    * @returns {Uint8Array | undefined}\n    */\n    partial_init_vector() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.headermap_partial_init_vector(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getArrayU8FromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {CounterSignature} counter_signature\n    */\n    set_counter_signature(counter_signature) {\n        _assertClass(counter_signature, CounterSignature);\n        wasm.headermap_set_counter_signature(this.ptr, counter_signature.ptr);\n    }\n    /**\n    * @returns {CounterSignature | undefined}\n    */\n    counter_signature() {\n        var ret = wasm.headermap_counter_signature(this.ptr);\n        return ret === 0 ? undefined : CounterSignature.__wrap(ret);\n    }\n    /**\n    * @param {Label} label\n    * @returns {CBORValue | undefined}\n    */\n    header(label) {\n        _assertClass(label, Label);\n        var ret = wasm.headermap_header(this.ptr, label.ptr);\n        return ret === 0 ? undefined : CBORValue.__wrap(ret);\n    }\n    /**\n    * @param {Label} label\n    * @param {CBORValue} value\n    */\n    set_header(label, value) {\n        _assertClass(label, Label);\n        _assertClass(value, CBORValue);\n        wasm.headermap_set_header(this.ptr, label.ptr, value.ptr);\n    }\n    /**\n    * @returns {Labels}\n    */\n    keys() {\n        var ret = wasm.headermap_keys(this.ptr);\n        return Labels.__wrap(ret);\n    }\n    /**\n    * @returns {HeaderMap}\n    */\n    static new() {\n        var ret = wasm.headermap_new();\n        return HeaderMap.__wrap(ret);\n    }\n}\nmodule.exports.HeaderMap = HeaderMap;\n/**\n*/\nclass Headers {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Headers.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_headers_free(ptr);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    to_bytes() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.headers_to_bytes(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Uint8Array} bytes\n    * @returns {Headers}\n    */\n    static from_bytes(bytes) {\n        var ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.headers_from_bytes(ptr0, len0);\n        return Headers.__wrap(ret);\n    }\n    /**\n    * @returns {ProtectedHeaderMap}\n    */\n    protected() {\n        var ret = wasm.headers_protected(this.ptr);\n        return ProtectedHeaderMap.__wrap(ret);\n    }\n    /**\n    * @returns {HeaderMap}\n    */\n    unprotected() {\n        var ret = wasm.headers_unprotected(this.ptr);\n        return HeaderMap.__wrap(ret);\n    }\n    /**\n    * @param {ProtectedHeaderMap} protected_\n    * @param {HeaderMap} unprotected_\n    * @returns {Headers}\n    */\n    static new(protected_, unprotected_) {\n        _assertClass(protected_, ProtectedHeaderMap);\n        _assertClass(unprotected_, HeaderMap);\n        var ret = wasm.headers_new(protected_.ptr, unprotected_.ptr);\n        return Headers.__wrap(ret);\n    }\n}\nmodule.exports.Headers = Headers;\n/**\n*/\nclass Int {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Int.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_int_free(ptr);\n    }\n    /**\n    * @param {BigNum} x\n    * @returns {Int}\n    */\n    static new(x) {\n        _assertClass(x, BigNum);\n        var ptr0 = x.ptr;\n        x.ptr = 0;\n        var ret = wasm.int_new(ptr0);\n        return Int.__wrap(ret);\n    }\n    /**\n    * @param {BigNum} x\n    * @returns {Int}\n    */\n    static new_negative(x) {\n        _assertClass(x, BigNum);\n        var ptr0 = x.ptr;\n        x.ptr = 0;\n        var ret = wasm.int_new_negative(ptr0);\n        return Int.__wrap(ret);\n    }\n    /**\n    * @param {number} x\n    * @returns {Int}\n    */\n    static new_i32(x) {\n        var ret = wasm.int_new_i32(x);\n        return Int.__wrap(ret);\n    }\n    /**\n    * @returns {boolean}\n    */\n    is_positive() {\n        var ret = wasm.int_is_positive(this.ptr);\n        return ret !== 0;\n    }\n    /**\n    * @returns {BigNum | undefined}\n    */\n    as_positive() {\n        var ret = wasm.int_as_positive(this.ptr);\n        return ret === 0 ? undefined : BigNum.__wrap(ret);\n    }\n    /**\n    * @returns {BigNum | undefined}\n    */\n    as_negative() {\n        var ret = wasm.int_as_negative(this.ptr);\n        return ret === 0 ? undefined : BigNum.__wrap(ret);\n    }\n    /**\n    * @returns {number | undefined}\n    */\n    as_i32() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.int_as_i32(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\nmodule.exports.Int = Int;\n/**\n*/\nclass Label {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Label.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_label_free(ptr);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    to_bytes() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.label_to_bytes(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Uint8Array} bytes\n    * @returns {Label}\n    */\n    static from_bytes(bytes) {\n        var ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.label_from_bytes(ptr0, len0);\n        return Label.__wrap(ret);\n    }\n    /**\n    * @param {Int} int\n    * @returns {Label}\n    */\n    static new_int(int) {\n        _assertClass(int, Int);\n        var ret = wasm.label_new_int(int.ptr);\n        return Label.__wrap(ret);\n    }\n    /**\n    * @param {string} text\n    * @returns {Label}\n    */\n    static new_text(text) {\n        var ptr0 = passStringToWasm0(text, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.label_new_text(ptr0, len0);\n        return Label.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    kind() {\n        var ret = wasm.label_kind(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {Int | undefined}\n    */\n    as_int() {\n        var ret = wasm.label_as_int(this.ptr);\n        return ret === 0 ? undefined : Int.__wrap(ret);\n    }\n    /**\n    * @returns {string | undefined}\n    */\n    as_text() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.label_as_text(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getStringFromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} id\n    * @returns {Label}\n    */\n    static from_algorithm_id(id) {\n        var ret = wasm.label_from_algorithm_id(id);\n        return Label.__wrap(ret);\n    }\n    /**\n    * @param {number} key_type\n    * @returns {Label}\n    */\n    static from_key_type(key_type) {\n        var ret = wasm.label_from_key_type(key_type);\n        return Label.__wrap(ret);\n    }\n    /**\n    * @param {number} ec_key\n    * @returns {Label}\n    */\n    static from_ec_key(ec_key) {\n        var ret = wasm.label_from_ec_key(ec_key);\n        return Label.__wrap(ret);\n    }\n    /**\n    * @param {number} curve_type\n    * @returns {Label}\n    */\n    static from_curve_type(curve_type) {\n        var ret = wasm.label_from_curve_type(curve_type);\n        return Label.__wrap(ret);\n    }\n    /**\n    * @param {number} key_op\n    * @returns {Label}\n    */\n    static from_key_operation(key_op) {\n        var ret = wasm.label_from_key_operation(key_op);\n        return Label.__wrap(ret);\n    }\n}\nmodule.exports.Label = Label;\n/**\n*/\nclass Labels {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Labels.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_labels_free(ptr);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    to_bytes() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.labels_to_bytes(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Uint8Array} bytes\n    * @returns {Labels}\n    */\n    static from_bytes(bytes) {\n        var ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.labels_from_bytes(ptr0, len0);\n        return Labels.__wrap(ret);\n    }\n    /**\n    * @returns {Labels}\n    */\n    static new() {\n        var ret = wasm.coserecipients_new();\n        return Labels.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    len() {\n        var ret = wasm.coserecipients_len(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} index\n    * @returns {Label}\n    */\n    get(index) {\n        var ret = wasm.labels_get(this.ptr, index);\n        return Label.__wrap(ret);\n    }\n    /**\n    * @param {Label} elem\n    */\n    add(elem) {\n        _assertClass(elem, Label);\n        wasm.labels_add(this.ptr, elem.ptr);\n    }\n}\nmodule.exports.Labels = Labels;\n/**\n*/\nclass PasswordEncryption {\n\n    static __wrap(ptr) {\n        const obj = Object.create(PasswordEncryption.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_passwordencryption_free(ptr);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    to_bytes() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.passwordencryption_to_bytes(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Uint8Array} bytes\n    * @returns {PasswordEncryption}\n    */\n    static from_bytes(bytes) {\n        var ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.passwordencryption_from_bytes(ptr0, len0);\n        return PasswordEncryption.__wrap(ret);\n    }\n    /**\n    * @param {COSEEncrypt0} data\n    * @returns {PasswordEncryption}\n    */\n    static new(data) {\n        _assertClass(data, COSEEncrypt0);\n        var ret = wasm.passwordencryption_new(data.ptr);\n        return PasswordEncryption.__wrap(ret);\n    }\n}\nmodule.exports.PasswordEncryption = PasswordEncryption;\n/**\n*/\nclass ProtectedHeaderMap {\n\n    static __wrap(ptr) {\n        const obj = Object.create(ProtectedHeaderMap.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_protectedheadermap_free(ptr);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    to_bytes() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.protectedheadermap_to_bytes(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Uint8Array} bytes\n    * @returns {ProtectedHeaderMap}\n    */\n    static from_bytes(bytes) {\n        var ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.protectedheadermap_from_bytes(ptr0, len0);\n        return ProtectedHeaderMap.__wrap(ret);\n    }\n    /**\n    * @returns {ProtectedHeaderMap}\n    */\n    static new_empty() {\n        var ret = wasm.protectedheadermap_new_empty();\n        return ProtectedHeaderMap.__wrap(ret);\n    }\n    /**\n    * @param {HeaderMap} header_map\n    * @returns {ProtectedHeaderMap}\n    */\n    static new(header_map) {\n        _assertClass(header_map, HeaderMap);\n        var ret = wasm.protectedheadermap_new(header_map.ptr);\n        return ProtectedHeaderMap.__wrap(ret);\n    }\n    /**\n    * @returns {HeaderMap}\n    */\n    deserialized_headers() {\n        var ret = wasm.protectedheadermap_deserialized_headers(this.ptr);\n        return HeaderMap.__wrap(ret);\n    }\n}\nmodule.exports.ProtectedHeaderMap = ProtectedHeaderMap;\n/**\n*/\nclass PubKeyEncryption {\n\n    static __wrap(ptr) {\n        const obj = Object.create(PubKeyEncryption.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_pubkeyencryption_free(ptr);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    to_bytes() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.pubkeyencryption_to_bytes(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Uint8Array} bytes\n    * @returns {PubKeyEncryption}\n    */\n    static from_bytes(bytes) {\n        var ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.pubkeyencryption_from_bytes(ptr0, len0);\n        return PubKeyEncryption.__wrap(ret);\n    }\n    /**\n    * @param {COSEEncrypt} data\n    * @returns {PubKeyEncryption}\n    */\n    static new(data) {\n        _assertClass(data, COSEEncrypt);\n        var ret = wasm.pubkeyencryption_new(data.ptr);\n        return PubKeyEncryption.__wrap(ret);\n    }\n}\nmodule.exports.PubKeyEncryption = PubKeyEncryption;\n/**\n*/\nclass SigStructure {\n\n    static __wrap(ptr) {\n        const obj = Object.create(SigStructure.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_sigstructure_free(ptr);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    to_bytes() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.sigstructure_to_bytes(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Uint8Array} bytes\n    * @returns {SigStructure}\n    */\n    static from_bytes(bytes) {\n        var ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.sigstructure_from_bytes(ptr0, len0);\n        return SigStructure.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    context() {\n        var ret = wasm.sigstructure_context(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {ProtectedHeaderMap}\n    */\n    body_protected() {\n        var ret = wasm.sigstructure_body_protected(this.ptr);\n        return ProtectedHeaderMap.__wrap(ret);\n    }\n    /**\n    * @returns {ProtectedHeaderMap | undefined}\n    */\n    sign_protected() {\n        var ret = wasm.sigstructure_sign_protected(this.ptr);\n        return ret === 0 ? undefined : ProtectedHeaderMap.__wrap(ret);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    external_aad() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.sigstructure_external_aad(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    payload() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.sigstructure_payload(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {ProtectedHeaderMap} sign_protected\n    */\n    set_sign_protected(sign_protected) {\n        _assertClass(sign_protected, ProtectedHeaderMap);\n        wasm.sigstructure_set_sign_protected(this.ptr, sign_protected.ptr);\n    }\n    /**\n    * @param {number} context\n    * @param {ProtectedHeaderMap} body_protected\n    * @param {Uint8Array} external_aad\n    * @param {Uint8Array} payload\n    * @returns {SigStructure}\n    */\n    static new(context, body_protected, external_aad, payload) {\n        _assertClass(body_protected, ProtectedHeaderMap);\n        var ptr0 = passArray8ToWasm0(external_aad, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passArray8ToWasm0(payload, wasm.__wbindgen_malloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ret = wasm.sigstructure_new(context, body_protected.ptr, ptr0, len0, ptr1, len1);\n        return SigStructure.__wrap(ret);\n    }\n}\nmodule.exports.SigStructure = SigStructure;\n/**\n*/\nclass SignedMessage {\n\n    static __wrap(ptr) {\n        const obj = Object.create(SignedMessage.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_signedmessage_free(ptr);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    to_bytes() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.signedmessage_to_bytes(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Uint8Array} bytes\n    * @returns {SignedMessage}\n    */\n    static from_bytes(bytes) {\n        var ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.signedmessage_from_bytes(ptr0, len0);\n        return SignedMessage.__wrap(ret);\n    }\n    /**\n    * @param {COSESign} cose_sign\n    * @returns {SignedMessage}\n    */\n    static new_cose_sign(cose_sign) {\n        _assertClass(cose_sign, COSESign);\n        var ret = wasm.signedmessage_new_cose_sign(cose_sign.ptr);\n        return SignedMessage.__wrap(ret);\n    }\n    /**\n    * @param {COSESign1} cose_sign1\n    * @returns {SignedMessage}\n    */\n    static new_cose_sign1(cose_sign1) {\n        _assertClass(cose_sign1, COSESign1);\n        var ret = wasm.signedmessage_new_cose_sign1(cose_sign1.ptr);\n        return SignedMessage.__wrap(ret);\n    }\n    /**\n    * @param {string} s\n    * @returns {SignedMessage}\n    */\n    static from_user_facing_encoding(s) {\n        var ptr0 = passStringToWasm0(s, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.signedmessage_from_user_facing_encoding(ptr0, len0);\n        return SignedMessage.__wrap(ret);\n    }\n    /**\n    * @returns {string}\n    */\n    to_user_facing_encoding() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.signedmessage_to_user_facing_encoding(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {number}\n    */\n    kind() {\n        var ret = wasm.signedmessage_kind(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {COSESign | undefined}\n    */\n    as_cose_sign() {\n        var ret = wasm.signedmessage_as_cose_sign(this.ptr);\n        return ret === 0 ? undefined : COSESign.__wrap(ret);\n    }\n    /**\n    * @returns {COSESign1 | undefined}\n    */\n    as_cose_sign1() {\n        var ret = wasm.signedmessage_as_cose_sign1(this.ptr);\n        return ret === 0 ? undefined : COSESign1.__wrap(ret);\n    }\n}\nmodule.exports.SignedMessage = SignedMessage;\n/**\n*/\nclass TaggedCBOR {\n\n    static __wrap(ptr) {\n        const obj = Object.create(TaggedCBOR.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_taggedcbor_free(ptr);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    to_bytes() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.taggedcbor_to_bytes(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Uint8Array} bytes\n    * @returns {TaggedCBOR}\n    */\n    static from_bytes(bytes) {\n        var ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.taggedcbor_from_bytes(ptr0, len0);\n        return TaggedCBOR.__wrap(ret);\n    }\n    /**\n    * @returns {BigNum}\n    */\n    tag() {\n        var ret = wasm.taggedcbor_tag(this.ptr);\n        return BigNum.__wrap(ret);\n    }\n    /**\n    * @returns {CBORValue}\n    */\n    value() {\n        var ret = wasm.taggedcbor_value(this.ptr);\n        return CBORValue.__wrap(ret);\n    }\n    /**\n    * @param {BigNum} tag\n    * @param {CBORValue} value\n    * @returns {TaggedCBOR}\n    */\n    static new(tag, value) {\n        _assertClass(tag, BigNum);\n        var ptr0 = tag.ptr;\n        tag.ptr = 0;\n        _assertClass(value, CBORValue);\n        var ret = wasm.taggedcbor_new(ptr0, value.ptr);\n        return TaggedCBOR.__wrap(ret);\n    }\n}\nmodule.exports.TaggedCBOR = TaggedCBOR;\n\nmodule.exports.__wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nmodule.exports.__wbindgen_string_new = function(arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nmodule.exports.__wbindgen_debug_string = function(arg0, arg1) {\n    var ret = debugString(getObject(arg1));\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nmodule.exports.__wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nmodule.exports.__wbindgen_rethrow = function(arg0) {\n    throw takeObject(arg0);\n};\n\nconst path = require('path').join(__dirname, 'emurgo_message_signing_bg.wasm');\nconst bytes = require('fs').readFileSync(path);\n\nconst wasmModule = new WebAssembly.Module(bytes);\nconst wasmInstance = new WebAssembly.Instance(wasmModule, imports);\nwasm = wasmInstance.exports;\nmodule.exports.__wasm = wasm;\n\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toObject = require('../internals/to-object');\nvar toString = require('../internals/to-string');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\nvar push = uncurryThis([].push);\nvar join = uncurryThis([].join);\n\n// `String.raw` method\n// https://tc39.es/ecma262/#sec-string.raw\n$({ target: 'String', stat: true }, {\n  raw: function raw(template) {\n    var rawTemplate = toIndexedObject(toObject(template).raw);\n    var literalSegments = lengthOfArrayLike(rawTemplate);\n    var argumentsLength = arguments.length;\n    var elements = [];\n    var i = 0;\n    while (literalSegments > i) {\n      push(elements, toString(rawTemplate[i++]));\n      if (i === literalSegments) return join(elements, '');\n      if (i < argumentsLength) push(elements, toString(arguments[i]));\n    }\n  }\n});\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n"],"sourceRoot":""}